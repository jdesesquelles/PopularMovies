apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'




android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "co.fabrk.popmovies"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
//        mock {
//            applicationIdSuffix ".mock"
//        }
        prod {

        }
    }
    buildTypes {
        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    buildTypes.each {
        it.buildConfigField 'String', 'TMDB_API_KEY', TMDB_API_KEY
    }
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:design:$rootProject.ext.designVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.appcompatV7Version"
    compile "com.android.support:support-v4:$rootProject.ext.supportV4Version"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.recyclerviewVersion"
    compile "com.android.support:palette-v7:$rootProject.ext.paletteV7Version"

    // Android annotations
    apt "org.androidannotations:androidannotations:$rootProject.ext.androidAnnotationVersion"
    compile "org.androidannotations:androidannotations-api:$rootProject.ext.androidAnnotationVersion"


    // Image
    compile "com.squareup.picasso:picasso:$rootProject.ext.picassoVersion"

    // YouTube
    compile "com.google.apis:google-api-services-youtube:$rootProject.ext.gasyoutubeVersion"
    compile files('libs/YouTubeAndroidPlayerApi.jar')

    // Annotations
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    // HttpClient lib
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"

    // Json parsing
    compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"



    // Network monitoring
    compile "com.facebook.stetho:stetho-okhttp3:$rootProject.ext.stethoVersion"
    compile "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"

    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    compile 'javax.validation:validation-api:1.0.0.GA'
    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.ext.supportAnnotationsVersion"
}






